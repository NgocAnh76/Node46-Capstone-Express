generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comments {
  comments_id Int       @id @default(autoincrement())
  content     String?   @db.VarChar(255)
  images_id   Int
  users_id    Int
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  users       users     @relation(fields: [users_id], references: [users_id], onDelete: Cascade, onUpdate: NoAction, map: "comments_ibfk_1")
  images      images    @relation(fields: [images_id], references: [images_id], onDelete: Cascade, onUpdate: NoAction, map: "comments_ibfk_2")

  @@index([images_id], map: "images_id")
  @@index([users_id], map: "users_id")
}

model images {
  images_id   Int           @id @default(autoincrement())
  title       String?       @db.VarChar(255)
  description String?       @db.Text
  users_id    Int
  url         String        @db.VarChar(255)
  comments    comments[]
  users       users         @relation(fields: [users_id], references: [users_id], onDelete: NoAction, onUpdate: NoAction, map: "images_ibfk_1")
  saved_image saved_image[]

  @@index([users_id], map: "users_id")
}

model saved_image {
  saved_image_id Int       @id @default(autoincrement())
  users_id       Int
  images_id      Int
  created_at     DateTime? @default(now()) @db.Timestamp(0)
  users          users     @relation(fields: [users_id], references: [users_id], onDelete: Cascade, onUpdate: NoAction, map: "saved_image_ibfk_1")
  images         images    @relation(fields: [images_id], references: [images_id], onDelete: Cascade, onUpdate: NoAction, map: "saved_image_ibfk_2")

  @@index([users_id], map: "saved_image_ibfk_1")
  @@index([images_id], map: "saved_image_ibfk_2")
}

model users {
  users_id    Int           @id @default(autoincrement())
  email       String        @unique(map: "unique_email") @db.VarChar(255)
  password    String?       @db.VarChar(255)
  full_name   String        @db.VarChar(255)
  avatar      String?       @db.VarChar(255)
  created_at  DateTime?     @default(now()) @db.Timestamp(0)
  updated_at  DateTime?     @default(now()) @db.Timestamp(0)
  comments    comments[]
  images      images[]
  saved_image saved_image[]
}
